enum AccessRights {
  USER
  ADMIN
  SUPER_ADMIN
}

type User {
  cid: String!
  name: String!
  email: String!
  accessRights: AccessRights!
  isActive: Boolean!
  templatesToSkipCommitConfirm: [TemplateSummary]!
  templatesToSkipMarkAsDone: [TemplateSummary]!
}

type TemplateSummary {
  title: String!
  cid: String!
}

type ScoreDetails {
  score: Int!
  tasksDoneWithAPartner: Int!
  tasksDoneAlone: Int!
}

type PossiblePartner {
  cid: String!
  name: String!
}

enum ConnectionType {
  REQUEST_TO
  REQUEST_FROM
  CONFIRMED
  BROKE_WITH
}

type Connection {
  cid: String!
  connectedUserCid: String!
  connectedUserName: String!
  type: ConnectionType!
}

enum PartnerUpDeadline {
  ONE_HOUR
  TWO_HOURS
  SIX_HOURS
  TWELVE_HOURS
  ONE_DAY
  ONE_WEEK
}

type Task {
  cid: String!
  templateCid: String
  title: String!
  due: Float!
  pointValue: Int!
  partnerUpDeadline: PartnerUpDeadline!
  description: String
  isCommitted: Boolean!
  hasOthers: Boolean!
  connections: [Connection]!
  outcomeType: OutcomeType
}

# Admin types

enum ConnectionTypeForAdmin {
  REQUESTED
  CONFIRMED
  BROKE_WITH
}

type ConnectionForAdmin {
  cid: String!
  fromCid: String!
  fromName: String!
  type: ConnectionTypeForAdmin!
  toCid: String!
  toName: String!
}

enum OutcomeType {
  FULFILLED
  FULFILLED_OMIT_PARTNER
  PENDING
  BROKEN
  BROKEN_OMIT_PARTNER
}

type Outcome {
  cid: String!
  taskCid: String!
  userCid: String!
  type: OutcomeType!
}

type TaskForAdmin {
  cid: String!
  templateCid: String
  title: String!
  due: Float!
  pointValue: Int!
  publishDate: Float!
  partnerUpDeadline: PartnerUpDeadline!
  description: String
  committedUsers: [User]!
  connections: [ConnectionForAdmin]!
  outcomes: [Outcome]!
}

enum RepeatFrequency {
  DAY
  WEEK
  MONTH
  END_OF_MONTH
}

type TaskTemplate {
  cid: String!
  title: String!
  description: String
  due: Float!
  publishDate: Float!
  pointValue: Int!
  repeatFrequency: RepeatFrequency!
  partnerUpDeadline: PartnerUpDeadline!
}
