type Mutation {
  createUser(name: String!, email: String!, loginTimestamp: Float!): User!
  makeUserInactive(cid: String!): User!
  makeUserActive(cid: String!): User!
  makeUserAnAdmin(cid: String!): User!
  removeUserAsAdmin(cid: String!): User!
  changeTaskStatusForUser(outcomeCid: String!, outcomeType: OutcomeType!): TaskForAdmin!
  createTask(title: String!, due: Float!, publishDate: Float!, partnerUpDeadline: PartnerUpDeadline!, description: String, pointValue: Int!): TaskForAdmin!
  updateTask(cid: String!, title: String!, due: Float!, publishDate: Float!, partnerUpDeadline: PartnerUpDeadline!, description: String, pointValue: Int!): TaskForAdmin!
  deleteTask(cid: String!): TaskForAdmin!
  createTaskTemplate(taskCid: String!, repeatFrequency: RepeatFrequency!): TaskTemplate!
  updateTaskTemplate(cid: String!, title: String!, description: String, pointValue: Int!, due: Float!, publishDate: Float!, partnerUpDeadline: PartnerUpDeadline!, repeatFrequency: RepeatFrequency): TaskTemplate!
  deleteTaskTemplate(cid: String!): TaskTemplate!
  confirmAsDone(taskCid: String!, userCid: String!): TaskForAdmin!
  denyAsDone(taskCid: String!, userCid: String!): TaskForAdmin!
}
