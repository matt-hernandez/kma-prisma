enum AccessRights {
  USER
  ADMIN
  SUPER_ADMIN
}

type User {
  id: ID! @id
  cid: String! @unique
  name: String!
  email: String! @unique
  loginTimestamp: Float!
  accessRights: AccessRights! @default(value: USER)
  isActive: Boolean! @default(value: true)
  templatesToSkipCommitConfirm: [String]! @scalarList(strategy: RELATION)
  templatesToSkipMarkAsDone: [String]! @scalarList(strategy: RELATION)
}

enum ConnectionType {
  REQUESTED
  CONFIRMED
  BROKE_WITH
}

type Connection {
  id: ID! @id
  cid: String! @unique
  taskId: String!
  fromId: String!
  fromCid: String!
  fromName: String!
  type: ConnectionType!
  toId: String!
  toCid: String!
  toName: String!
}

enum OutcomeType {
  FULFILLED
  FULFILLED_OMIT_PARTNER
  PENDING
  BROKEN
  BROKEN_OMIT_PARTNER
}

type Outcome {
  id: ID! @id
  cid: String! @unique
  taskId: String!
  taskCid: String!
  userId: String!
  userCid: String!
  signifier: String! @unique
  type: OutcomeType!
}

enum RepeatFrequency {
  DAY
  WEEK
  MONTH
  END_OF_MONTH
}

enum PartnerUpDeadline {
  ONE_HOUR
  TWO_HOURS
  SIX_HOURS
  TWELVE_HOURS
  ONE_DAY
  ONE_WEEK
}

type TaskTemplate {
  id: ID! @id
  cid: String! @unique
  title: String!
  description: String
  due: Float!
  publishDate: Float!
  pointValue: Int! @default(value: 1)
  partnerUpDeadline: PartnerUpDeadline!
  repeatFrequency: RepeatFrequency!
}

type Task {
  id: ID! @id
  cid: String! @unique
  templateId: String
  templateCid: String
  title: String!
  due: Float!
  pointValue: Int!
  publishDate: Float!
  partnerUpDeadline: PartnerUpDeadline!
  description: String
  committedUsersIds: [String]! @scalarList(strategy: RELATION)
}
